---
schema_version: 1
options:
  # should getters / setters be prefixed with get / set?
  getSyntax: True
  setSyntax: True
  # should POD members be exposed with getters/setters in classes that have them as members?
  exposePODMembers: False
  includeSubfolder: True

datatypes:

  extension::DriftChamberDigiLocal:
    Description: "Drift chamber digitized hit (before tracking) in local coordinates"
    Author: "B. Francois, CERN"
    Members:
      - uint64_t cellID               // ID of the wire that created this hit
      - float distanceToWire          // smeared distance of closest approach between the wire and the hit [mm]
      - float zPositionAlongWire      // smeared z position in the local wire coordinate system [mm]
      - float time                    // time of the hit [ns].
      - float eDep                    // energy deposited on the hit [GeV].
      - float eDepError               // error measured on eDep [GeV].
      - uint32_t clusterCount         // number of clusters associated to this hit

  extension::DriftChamberDigi:
    Description: "Drift chamber digitized hit (before tracking) in global coordinates. Assumes that the hits are radially in the middle of the cells"
    Author: "B. Francois, CERN"
    Members:
      - uint64_t cellID               // ID of the wire that created this hit
      - edm4hep::Vector3d leftPosition // position of the hit assuming it was on the left side of the wire, radially in the middle of the cell [mm]
      - edm4hep::Vector3d rightPosition // position of the hit assuming it was on the right side of the wire, radially in the middle of the cell [mm]
      - float time                    // time of the hit [ns].
      - float eDep                    // energy deposited on the hit [GeV].
      - float eDepError               // error measured on eDep [GeV].
      - uint32_t clusterCount         // number of clusters associated to this hit

  extension::MCRecoDriftChamberDigiAssociation:
    Description: "Association between a DriftChamberDigi and the corresponding simulated hit"
    Author: "B. Francois, CERN"
    Members:
      - float weight              // weight of this association
    OneToOneRelations:
      - extension::DriftChamberDigi digi    // reference to the digitized hit
      - edm4hep::SimTrackerHit sim // reference to the simulated hit

  extension::DriftChamberDigiV2:
    Description: "Digitized hit (before tracking) for Drift Chamber v2 (requires data extension)."
    Author: "A. Tolosa-Delgado, B. Francois, CERN"
    Members:
      - uint64_t cellID               // ID of the sensor that created this hit
      - int32_t type                  // type of the raw data hit
      - int32_t quality               // quality bit flag of the hit
      - float time                    // time of the hit [ns]
      - float eDep                    // energy deposited on the hit [GeV]
      - float eDepError               // error measured on eDep [GeV]
      - edm4hep::Vector3d position    // point on the sensitive wire (SW) which is closest to the simhit [mm]
      - edm4hep::Vector3d directionSW // direction of SW
      - float distanceToWire          // distance hit-wire [mm]
      - uint32_t nCluster             // number of clusters associated to this hit
    VectorMembers:
      - uint16_t nElectrons           // number of electrons for each cluster

  extension::MCRecoDriftChamberDigiV2Association:
    Description: "Association between a DriftChamberDigi and the corresponding simulated hit"
    Author: "B. Francois, CERN"
    Members:
      - float weight              // weight of this association
    OneToOneRelations:
      - extension::DriftChamberDigiV2 digi    // reference to the digitized hit
      - edm4hep::SimTrackerHit sim // reference to the simulated hit

  extension::Track:
    Description: "Reconstructed track"
    Author: "EDM4hep authors"
    Members:
      - int32_t type                         // flagword that defines the type of track.Bits 16-31 are used internally
      - float chi2                       // Chi^2 of the track fit
      - int32_t ndf                          // number of degrees of freedom of the track fit
      - float dEdx                       // dEdx of the track
      - float dEdxError                  // error of dEdx
      - float radiusOfInnermostHit       // radius of the innermost hit that has been used in the track fit
    VectorMembers:
      - int32_t subdetectorHitNumbers        // number of hits in particular subdetectors
      - edm4hep::TrackState trackStates  // track states
      - edm4hep::Quantity dxQuantities // different measurements of dx quantities
    OneToManyRelations:
      - extension::TrackerHit trackerHits  // hits that have been used to create this track
      - extension::Track tracks            // tracks (segments) that have been combined to create this track

# the following is just because interface looks for e.g. extension/TrackerHit3DCollection.h
  extension::TrackerHit3D:
    Description: "Tracker hit"
    Author: "EDM4hep authors"
    Members:
      - uint64_t cellID      // ID of the sensor that created this hit
      - int32_t type                       // type of raw data hit
      - int32_t quality                    // quality bit flag of the hit
      - float time [ns]                    // time of the hit
      - float eDep [GeV]                   // energy deposited on the hit
      - float eDepError [GeV]              // error measured on EDep
      - edm4hep::Vector3d position [mm]    // hit position
      - edm4hep::CovMatrix3f covMatrix // covariance matrix of the position (x,y,z)
    ExtraCode:
      includes: "#include <edm4hep/Constants.h>"
      declaration: "
      /// Get the position covariance matrix value for the two passed dimensions\n
      float getCovMatrix(edm4hep::Cartesian dimI, edm4hep::Cartesian dimJ) const { return getCovMatrix().getValue(dimI, dimJ); }\n
      "
    MutableExtraCode:
      includes: "#include <edm4hep/Constants.h>"
      declaration: "
      /// Set the position covariance matrix value for the two passed dimensions\n
      void setCovMatrix(float value, edm4hep::Cartesian dimI, edm4hep::Cartesian dimJ) { getCovMatrix().setValue(value, dimI, dimJ); }\n
      "
  extension::TrackerHitPlane:
    Description: "Tracker hit plane"
    Author: "EDM4hep authors"
    Members:
      - uint64_t cellID      // ID of the sensor that created this hit
      - int32_t type                       // type of raw data hit
      - int32_t quality                    // quality bit flag of the hit
      - float time [ns]                    // time of the hit
      - float eDep [GeV]                   // energy deposited on the hit
      - float eDepError [GeV]              // error measured on EDep
      - edm4hep::Vector2f u            // measurement direction vector, u lies in the x-y plane
      - edm4hep::Vector2f v            // measurement direction vector, v is along z
      - float du                       // measurement error along the direction
      - float dv                       // measurement error along the direction
      - edm4hep::Vector3d position [mm]   // hit position
      - edm4hep::CovMatrix3f covMatrix // covariance of the position (x,y,z)
    ExtraCode:
      includes: "#include <edm4hep/Constants.h>"
      declaration: "
      /// Get the position covariance matrix value for the two passed dimensions\n
      float getCovMatrix(edm4hep::Cartesian dimI, edm4hep::Cartesian dimJ) const { return getCovMatrix().getValue(dimI, dimJ); }\n
      "
    MutableExtraCode:
      includes: "#include <edm4hep/Constants.h>"
      declaration: "
      /// Set the position covariance matrix value for the two passed dimensions\n
      void setCovMatrix(float value, edm4hep::Cartesian dimI, edm4hep::Cartesian dimJ) { getCovMatrix().setValue(value, dimI, dimJ); }\n
      "

# end of "the following is just because interface looks for e.g. extension/TrackerHit3DCollection.h"

interfaces:
  extension::TrackerHit:
    Description: "Tracker hit interface class"
    Author: "Thomas Madlener, DESY"
    Members:
      - uint64_t cellID // ID of the sensor that created this hit
      - int32_t type // type of the raw data hit
      - int32_t quality // quality bit flag of the hit
      - float time [ns] // time of the hit
      - float eDep [GeV] // energy deposited on the hit
      - float eDepError [GeV] // error measured on eDep
      - edm4hep::Vector3d position [mm] // hit position
    Types:
      - extension::TrackerHitPlane
      - extension::TrackerHit3D
      - extension::DriftChamberDigiV2
